import './App.css';
import React, { useState, useEffect } from 'react';
import { Routes, Route, Link } from 'react-router-dom';
import { Button } from '@mui/material';


function App() {
  const [allusers, setAllusers] = useState([]);
  
  useEffect(() => {
    fetch("http://localhost:9000/users")
      .then((res) => res.json())
      .then((data) => setAllusers(data))
      .catch((error) => console.error('Error fetching users:', error));
  }, []);

  return (
    <div className="App">
      <Link to="/login"><Button>Login</Button></Link>
      <Link to="/signup"><Button>SignUp</Button></Link>
      <Routes>
        <Route path="/login" element={<EmailLogin />} />
        <Route path="/signup" element={<SignUp />} />
        <Route path="/forgotPassword" element={<ForgotPassword />} />
        <Route path="/login/myaccount" element={<MyAccount />} />
      </Routes>
    </div>
  );
}


function SignUp() {
  const [email, setEmail] = useState('');
  const [password, setPassword] = useState('');

  const handleSignUp = async () => {
    const navigate = useNavigate();
    const [email, setEmail] = useState('');
    const [password, setPassword] = useState('');
    const [error, setError] = useState("");
    const handlelogin = async () => {
      const users = {
        email,
        password
      };
      const response = await fetch("http://localhost:9000/users/login", {
        method: "POST",
        body: JSON.stringify(users),
        headers: {
          "content-type": "application/json"
        }
      });
      const data = await response.json();
      if (data.token) {
        setError("");
        localStorage.setItem("token", data.token);
        navigate("/login/myaccount");
      }
      else {
        if (data.error === "Invalid EmailID") {
          setError("Invalid email address entered.");
        } else if (data.error === "Invalid Password") {
          setError("Incorrect password entered.");
        } else {
          setError("Login failed. Please try again.");
        }
      }
    };

    return (
      <div>
        <TextField
          id="outlined-basic-email"
          label="Email"
          variant="outlined"
          value={email}
          onChange={(e) => setEmail(e.target.value)} />
        <TextField
          id="outlined-basic-password"
          label="Password"
          variant="outlined"
          type="password"
          value={password}
          onChange={(e) => setPassword(e.target.value)} />
        <Button variant="contained" onClick={handleSignUp}>
          SignUp
        </Button>
      </div>
    );
  };

  function EmailLogin() {
    const navigate = useNavigate();
    const [email, setEmail] = useState('');
    const [password, setPassword] = useState('');
    const [error, setError] = useState("");
    const handlelogin = async () => {
      const users = {
        email,
        password
      };
      const response = await fetch("http://localhost:9000/users/login", {
        method: "POST",
        body: JSON.stringify(users),
        headers: {
          "content-type": "application/json"
        }
      });
      const data = await response.json();
      if (data.token) {
        setError("");
        localStorage.setItem("token", data.token);
        navigate("/login/myaccount");
      }
      else {
        if (data.error === "Invalid EmailID") {
          setError("Invalid email address entered.");
        } else if (data.error === "Invalid Password") {
          setError("Incorrect password entered.");
        } else {
          setError("Login failed. Please try again.");
        }
      }
    };
    return (
      <div>
        <div>
          <TextField
            id="outlined-basic-email"
            label="Email"
            variant="outlined"
            value={email}
            onChange={(e) => setEmail(e.target.value)} />
          <TextField
            id="outlined-basic-password"
            label="Password"
            variant="outlined"
            type="password"
            value={password}
            onChange={(e) => setPassword(e.target.value)} />
          <Button variant="contained" onClick={handlelogin}>
            Login
          </Button>
          {error ? <Typography>{error}</Typography> : ""}
        </div>
        <Button component={Link} to="/forgotPassword">Forgot Password</Button>
      </div>
    );
  }

  function ForgotPassword() {
    return (
      <div>
        <h1>Hello</h1>
      </div>
    );
  }


  function MyAccount() {
    return (
      <div>
        <h1>Hello</h1>
      </div>
    );
  }
}

*


